=============================
        EDA Checklist
=============================
library(pacman)
p_load(readr, dplyr,lubridate)
#carbon <- read_csv("C:/Users/Usuario/Documents/cursos/Data Analysis/hourly_42101_2014.csv",col_types = "ccccinnccccccnncccccc")
carbon <- read_csv("C:/Users/Usuario/Documents/cursos/Data Analysis/hourly_42101_2014.csv",col_types = cols(.default = "c"))
str(carbon)
names(carbon)
head(carbon[,c(6 ,7, 10)])
tail(carbon[,c(1, 2, 3, 4, 6, 7, 10)])
table(carbon$`State Code`)
table(carbon$`Time Local`)
colnames(carbon) <- gsub(" ",".",names(carbon))
colnames(carbon) <- gsub('([[:punct:]])|\\s+','.',colnames(carbon))
colnames(carbon) <- tolower(colnames(carbon))
colnames(carbon)
car <- carbon
filter(carbon, time.local=="03:00")%>%
      select(state.code, county.code, date.local, time.local, sample.measurement)
filter(carbon, time.local=="03:00")%>%
  select(1, 2, 10, 11, 14)
filter(carbon,state.code== "36"
       & county.code == "029"
       & date.local == "2014-09-30") %>%
  select(date.local, time.local, sample.measurement) %>%
  as.data.frame
select(carbon,state.code) %>% unique %>% nrow
unique(carbon$state.code)
carbon$sample.measurement <- as.numeric(carbon$sample.measurement)
summary(carbon$sample.measurement)
quantile(carbon$sample.measurement,seq(0,1,0.1))
#the easy solution first
#which counties in the United States have the highest levels of ambient CO pollution?
g <- sapply(split(carbon$sample.measurement,carbon$state.name),mean,na.rm=T) %>%
  as.data.frame
g$state.name <- rownames(g)
g<- rename(g, promedio = .)
g <- g[,c(2,1)]
ranking2 <- arrange(g,desc(promedio))
q <- head(ranking2,10)
with(q, plot(promedio,state.name, type = "h", col = c(1:10))
with(ranking2, barplot(state.name,promedio))
table(ranking2$promedio) %>% barplot(col = "red")
ranking <- group_by(carbon, state.name) %>%
  summarise(promedio = mean(sample.measurement, rm.na=T)) %>%
  as.data.frame %>%
  arrange(desc(promedio))
head(ranking)
ranking3 <- group_by(carbon, state.name, county.name) %>%
  summarise(promedio = mean(sample.measurement)) %>%
  as.data.frame %>%
  arrange(desc(promedio))
head(ranking3)
tail(ranking3)
#cuantas observaciones tiene county San Juan de Puerto Rico
filter(carbon,state.name == "Puerto Rico" & county.name == "San Juan")%>% nrow
filter(carbon, county.name == "San Juan")%>% nrow
# convertir la columna de fecha al formato Date
#carbon$date.local <- car$date.local
carbon$month <- month(ymd(carbon$date.local),label=T,abbr = F)
max <- filter(carbon, county.name == "San Juan") %>%
  group_by(month) %>%
  summarise(promedio = mean(sample.measurement, rm.na=T))
g <- filter(carbon, county.name == "San Juan")
sapply(split(g$sample.measurement, g$month), mean, na.rm=T)
min <- filter(carbon, county.name == "Berks") %>%
  group_by(month) %>%
  summarise(promedio = mean(sample.measurement, rm.na=T))
total <- rename(max,maximo=promedio)
total$minimo <- min$promedio
total <- mutate(total,diferencia=maximo-minimo)
total
set.seed(101234)
N <- nrow(carbon)
idx <- sample(N, N, replace = T)
carbon2 <- carbon[idx,]
rankingb <- group_by(carbon2, state.name, county.name) %>%
  summarise(promediob = mean(sample.measurement)) %>%
  as.data.frame %>%
  arrange(desc(promediob))
head(rankingb)
head(ranking3)
cbind(head(ranking3, 10), head(rankingb, 10))
estabilidad <- cbind(tail(ranking3[,1:2], 10), tail(rankingb[,1:2], 10))
names(estabilidad) <- c("state A", "county A", "state B", "county B")
estabilidad
=============================
  Exploratory Graphs
=============================
library(pacman,maps)
p_load(dplyr)
pollution <- read.csv("C:/Users/Usuario/Documents/cursos/Data Analysis/hackathons/avgpm25.csv",colClasses = c("numeric","character", "factor", "numeric", "numeric"))
str(pollution)
head(pollution)
sapply(split(pollution$pm25,pollution$region),mean)
#NAs
table(is.na(pollution))
prop.table(table(is.na(pollution)))
colSums(is.na(pollution))
fivenum(pollution$pm25)
summary(pollution)
#Numerical
boxplot(pollution$pm25,col = "blue")
abline(h = 12)
filter(pollution,pm25>15)
map("county","california")
with(filter(pollution,pm25 > 15), points(longitude, latitude))
hist(pollution$pm25, col = "green")
rug(pollution$pm25)
abline(v = 12, lwd = 3)
abline(v = median(pollution$pm25), col = "darkblue", lwd = 3)
#Categorical
table(pollution$region) %>% barplot(col = "lightblue")
barplot(pollution$region)
boxplot(pm25~region, data = pollution, col = "tomato")
#multiple histogram
par(mfrow = c(2,1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region = "east")$pm25, col = "green", breaks = 100)
hist(subset(pollution, region = "west")$pm25, col = "green")
layout(1)
#scatterplots
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 4)
#scatterplots using color
with(pollution, plot(latitude, pm25, col = region))
levels(pollution$region)
#el que aparece primero es el negro, col = 1
abline(h = 12, lwd = 2, lty = 4)
rm(col)
#multiple scatter plots
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
with(subset(pollution, region == "west"), plot(latitude, pm25, main = "West"))
with(subset(pollution, region == "east"), plot(latitude, pm25, main = "East"))
with(subset(pollution, region == "west"), plot(longitude, pm25, main = "West"))
with(subset(pollution, region == "east"), plot(longitude, pm25, main = "East"))
layout(1)
##latice
library(lattice)
xyplot(pm25 ~ latitude | region, data = pollution)
##ggplot
library(ggplot2)
qplot(latitude, pm25, data = pollution, facets = .~region)
