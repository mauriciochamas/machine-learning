path <- "C:/Users/Usuario/Documents/cursos/Data Analysis/hackathons/student hunt"
setwd(path)
train <- read.csv("train.csv",stringsAsFactors = F)
test <- read.csv("test.csv",stringsAsFactors = F)
library(dplyr)
dim(train)
str(train)
names(train)
fivenum(train$Direction_Of_Wind)
plot(train$Max_Breeze_Speed,train$Min_Breeze_Speed)
#SELECT
head(select(train,Max_Atmospheric_Pressure,Max_Moisture_In_Park),5)
head(select(train,Max_Atmospheric_Pressure:Max_Moisture_In_Park),5)
head(select(train,Max_Moisture_In_Park:Max_Atmospheric_Pressure),5)
head(select(train,c(1,3)),5)
head(select(train,c(Var1,Location_Type)),5)
head(tail(select(train,-1)),5)
names(train)[c(1,4)]
i <- match("Date",names(train))
j <- match("Location_Type",names(train))
head(train[,c(i,j)])
head(train$Date)
head(train[,c(match(c("Date","Location_Type"),names(train)))])
tail(train$Date)
tail(test$Date)
test$Footfall <- 1
total <- rbind(train,test)
#variable names
head(select(total,ends_with("e")))
head(select(total,starts_with("Average")))
#FILTER
a <- head(filter(total,Average_Breeze_Speed>30))
fivenum(a$Average_Breeze_Speed)
a <- filter(total,Average_Moisture_In_Park>280&Max_Moisture_In_Park<mean(Max_Moisture_In_Park,na.rm = T))
which.max(total$Footfall)
total$Date[108407]
total$Park_ID[108407]
table(total$Park_ID)
plot(total$Footfall)
#ARRANGE
head(arrange(total,desc(Date)),2)
head(arrange(total,Date),2)
#RENAME
total <- rename(total,npi=Var1)
total <- rename(total,Var1=npi)
names(total)
#MUTATE
total <- mutate(train,Average_Ambient_Pollution=(Max_Ambient_Pollution+Min_Ambient_Pollution)/2)
head(select(total,ends_with("Pollution")))
total$Average_Ambient_Pollution2 <- (total$Max_Ambient_Pollution+total$Min_Ambient_Pollution)/2
head(select(total,c(19,20)))
total$Average_Ambient_Pollution2 <- NULL
head(transmute(train,Average_Ambient_Pollution=(Max_Ambient_Pollution+Min_Ambient_Pollution)/2))
head(total$Date)
mode(total$Date)
#FECHAS AÑO
library(lubridate)
total$year <- year(dmy(total$Date))
table(total$year)
total$month <- month(dmy(total$Date))
table(total$month)
total$wday <- wday(dmy(total$Date))
table(total$wday)
res <- group_by(total,year)
summarise(res,Foot=mean(Footfall,na.rm = T))
summarise(group_by(total,year),Foot=mean(Footfall,na.rm = T))
park <- group_by(total,Park_ID)
summarise(park,Foot=mean(Footfall,na.rm = T))
#%>%
group_by(total,Park_ID)%>%
summarise(Foot=mean(Footfall,na.rm = T))
#EDA
str(total)
head(total[,c(19,20,21)])
head(select(total,c(19,20,21)))
tail(select(total,c(19,20,21)))
tapply(total$Footfall,total$month,mean)
colSums(is.na(total))
prop.table(table(is.na(total)))
prop.table(as.data.frame(colSums(is.na(train))))
fivenum(total$Max_Atmospheric_Pressure)
filter(total,Max_Atmospheric_Pressure>8500)%>%
  select(c(2,3,20,10))%>%
  dim()%>%
  as.data.frame()
select(total,Park_ID)%>% unique()%>%nrow()
unique(total$Park_ID)
pid <- group_by(total,Park_ID)%>%
  summarise(Foot=mean(Footfall,rm.na=T))%>%
  as.data.frame%>%
  arrange(desc(Foot))
head(pid)
tail(pid)
pl <- group_by(total,Park_ID,Location_Type)%>%
  summarise(Foot=mean(Footfall,rm.na=T))%>%
  as.data.frame%>%
  arrange(desc(Foot))
head(pl)
tail(pl)
loc <- group_by(total,Location_Type)%>%
  summarise(Foot=mean(Footfall,rm.na=T))%>%
  as.data.frame%>%
  arrange(desc(Foot))
head(loc)
filter(total,Park_ID==19)%>% nrow
filter(total,Park_ID==19)%>%
  group_by(wday)%>%
  summarise(Foot=mean(Footfall,rm.na=T))
group_by(total,year)%>%
  summarise(Foot=mean(Footfall,rm.na=T))
#Graphs
boxplot(train$Average_Breeze_Speed,col="lightblue")
filter(train,Average_Breeze_Speed>150) %>%select(c(2,3,18))%>%head
filter(train,Average_Breeze_Speed<5) %>%dim()
hist(train$Average_Breeze_Speed,col = "orange")
rug(train$Average_Breeze_Speed)
hist(train$Average_Breeze_Speed,col = "green",breaks = 100)
  rug(train$Average_Breeze_Speed)
  abline(v=30.4,lwd=5,col="magenta")
  fivenum(train$Average_Breeze_Speed)
boxplot(train$Average_Breeze_Speed,col="lightblue")
abline(h=30.4)
table(train$Park_ID)%>%barplot(col="wheat")
#categoricalVScontinuous
boxplot(Footfall~Park_ID,data = train,col=palette(rainbow(4)))
#multiple graphs
boxplot(Footfall~Location_Type,data = train,col=palette())
par(mfrow=c(2,1),mar=c(4,4,2,1))
hist(subset(train,Park_ID==12)$Footfall,col = "green")
hist(subset(train,Park_ID==25)$Footfall,col = "green")
layout(1)
#continuous
train$location <- as.character(train$Location_Type)
with(train,plot(Max_Atmospheric_Pressure,Max_Moisture_In_Park,col=location))
abline(h=220,lwd=4,lty=2)
levels(train$location)
par(mfrow=c(2,2))
with(subset(train,Location_Type==1,plot(Max_Atmospheric_Pressure,Max_Moisture_In_Park,main = "1")))
with(subset(train,location=="2",plot(Max_Atmospheric_Pressure,Max_Moisture_In_Park,main = "2")))
with(subset(train,location=="3",plot(Max_Atmospheric_Pressure,Max_Moisture_In_Park,main = "3")))
with(subset(train,location=="4",plot(Max_Atmospheric_Pressure,Max_Moisture_In_Park,main = "4")))
table(train$Location_Type)
layout(1)
with(train,plot(Average_Moisture_In_Park,Footfall))
library(lattice)
xyplot(Footfall~Average_Moisture_In_Park|Location_Type,data = train,layout=c(4,1))
xyplot(Footfall~Average_Breeze_Speed|Location_Type,data = train,layout=c(4,1))
library(ggplot2)
qplot(Average_Breeze_Speed,Footfall,data = train,col="tomato")
colors()
train$Average_Ambient_Pollution <- (train$Max_Ambient_Pollution+train$Min_Ambient_Pollution)/2
with(train,plot(Average_Ambient_Pollution,Footfall,col="yellowgreen",pch=20))
with(subset(train,Location_Type==1),points(Average_Ambient_Pollution,Footfall,col="tan"))
legend("topright",pch=1,col = c("yellowgreen","tan"),legend = c("2,3,4","1"))
model <- lm(Footfall~Average_Ambient_Pollution,train)
abline(model,lwd=3)
par(mfrow=c(1,2))
with(train,{plot(Average_Ambient_Pollution,Footfall,main = "Ambient Pollution",col="springgreen")
  plot(Average_Breeze_Speed,Footfall,main = "Breeze Speed",col="slategrey")
  mtext("Explicando Footfall",outer = T)
  })
image(volcano,col = heat.colors(100),main="heat")
image(volcano,col = topo.colors(100),main="topo")
#Impute NAs
library(Hmisc)
colSums(is.na(train))
train$Direction_Of_Wind <- with(train,impute(Direction_Of_Wind,"random"))
train$Average_Breeze_Speed <- with(train,impute(Average_Breeze_Speed,"random"))
train$Max_Breeze_Speed <- with(train,impute(Max_Breeze_Speed,"random"))
train$Min_Breeze_Speed <- with(train,impute(Min_Breeze_Speed,"random"))
train$Var1 <- with(train,impute(Var1,"random"))
train$Average_Atmospheric_Pressure <- with(train,impute(Average_Atmospheric_Pressure,"random"))
train$Max_Atmospheric_Pressure <- with(train,impute(Max_Atmospheric_Pressure,"random"))
train$Average_Moisture_In_Park <- with(train,impute(Average_Moisture_In_Park,"random"))
train$Max_Moisture_In_Park <- with(train,impute(Max_Moisture_In_Park,"random"))
train$Min_Atmospheric_Pressure <- with(train,impute(Min_Atmospheric_Pressure,"random"))
train$Min_Moisture_In_Park <- with(train,impute(Min_Moisture_In_Park,"random"))
train$Max_Ambient_Pollution <- with(train,impute(Max_Ambient_Pollution,"random"))
train$Min_Ambient_Pollution <- with(train,impute(Min_Ambient_Pollution,"random"))
kprueba <- kmeans(train,centers = 3)
library(impute)
#train$Direction_Of_Wind <- impute.knn(as.matrix(train$Direction_Of_Wind))$data
#train <- impute.knn(as.matrix(train))$data
#colSums(is.na(train))
#GGPLOT2
library(ggplot2)
str(train)
train$Location_Type <- as.factor(train$Location_Type)
qplot(Direction_Of_Wind,Footfall,data = train,color=Location_Type)
qplot(Footfall,Average_Breeze_Speed,data = train,color=Location_Type)
qplot(Footfall,Average_Breeze_Speed,data = train,geom = c("point","smooth"))
qplot(Footfall,data = train,fill=Location_Type,binwidth=10)
qplot(Location_Type,Footfall,data = train,geom = "boxplot")
qplot(Average_Breeze_Speed,Footfall,data = train,facets = .~Location_Type)+geom_smooth()
qplot(Footfall,data = train,fill=Location_Type)
qplot(Footfall,data = train,geom = "density")
qplot(Footfall,data = train,geom = "density",color=Location_Type)
names(train)
qplot(Max_Atmospheric_Pressure,Footfall,data = train,geom = c("point","smooth"))
qplot(Max_Atmospheric_Pressure,Footfall,data = train,geom = c("point","smooth"),shape=Location_Type)
qplot(Max_Atmospheric_Pressure,Footfall,data = train,geom = c("point","smooth"),color=Location_Type,method="lm")
qplot(Max_Atmospheric_Pressure,Footfall,data = train,geom = c("point","smooth"),method="lm",facets = .~Location_Type)
g <- ggplot(train,aes(Max_Ambient_Pollution,Footfall))
g+geom_point()+geom_smooth(method = "lm")
h <- ggplot(train,aes(Min_Ambient_Pollution,Footfall))
h+geom_point()+geom_smooth(method = "lm")+facet_grid(.~Location_Type)
h+geom_point(color="steelblue",size=4,alpha=1/2)
h+geom_point(aes(color=Location_Type),size=4,alpha=1/2)
h+geom_point()+labs(title="Hunt")+labs(x=expression("Contaminación"*PM[2.5]),y="Asistencia")
h+geom_point(size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=F)
h+geom_point()+theme_bw(base_family="Times")
#Direction of Wind Categorical
cutpoint <- quantile(train$Direction_Of_Wind,seq(0,1,length=5),na.rm = T)
cutpoint2 <- c(0,45,135,225,315,360)
train$Wind <- cut(train$Direction_Of_Wind,cutpoint2)
levels(train$Wind)
library(forcats)
train$Wind<- train$Wind%>%fct_collapse("(315,45]"=c("(0,45]","(315,360]"))
levels(train$Wind)
g <- ggplot(train,aes(Wind,Footfall))
#g+geom_point()+facet_wrap(Footfall~Wind,nrow=2,ncol=4)+geom_smooth(method = "lm",col="tomato")
#g+geom_point()+facet_wrap(Footfall~Wind)+geom_smooth(method = "lm",col="tomato")
#axis limits
plot(train$Date,train$Footfall,type = "l",ylim = c(0,3000),xlim = c(0,100))
ggplot(train,aes(x=Date,y=Footfall))+geom_line()+ylim(500,1500)
train$year <- year(dmy(train$Date))
table(train$year)
train$month <- month(dmy(train$Date),label=T,abbr=T)
table(train$month)
train$wday <- wday(dmy(train$Date),label=T,abbr=T)
table(train$wday)
ggplot(train,aes(x=year,y=Footfall))+geom_col()
ggplot(train,aes(x=month,y=Footfall))+geom_col()
ggplot(train,aes(x=wday,y=Footfall))+geom_col()
qplot(Wind,Footfall,data = train,geom = "boxplot")
with(train,tapply(Footfall,Wind, summary))
library(forcats)
train$season <- train$month%>%fct_collapse("winter"=c("Dec","Jan","Feb"),"spring"=c("Mar","Apr","May"),"summer"=c("Jun","Jul","Aug"),"fall"=c("Sep","Oct","Nov"))
levels(train$season)
ggplot(train,aes(x=season,y=Footfall))+geom_col()
fivenum(train$year)
table(train$Park_ID,train$year)
prom <- group_by(train,year,Park_ID)%>%summarise(pro=sum(Footfall,na.rm=T))
qplot(xyear,pro,data=mutate(prom,xyear=as.numeric(as.character(year))),color=factor(Park_ID),geom = c("point","line"))
g <- as.data.frame(tapply(train$Footfall,train$month,sum))
plot(tapply(train$Footfall,train$wday,mean))
levels(train$wday)
